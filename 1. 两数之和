/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
 //暴力解法：时间复杂度O(N^2),空间复杂度O(1)
int* twoSum(int* nums, int numsSize, int target, int* returnSize)
{
    int* ret = (int*)malloc(sizeof(int)*2);
    *returnSize = 2;
    for(int i = 0;i < numsSize;i++)
    {
        for(int j = i+1;j < numsSize;j++)
        {
            if(nums[i] + nums[j] == target)
            {
                ret[0] = i;
                ret[1] = j;
                return ret;
            }
        }
    }

    return ret;
}
//哈希表法（暂缓在写）：第一遍遍历将nums数组的元素作为hash的key，nums的序号作为val；
//第二遍遍历：用target-nums[i]，然后在hash数组中寻找是否存在。
