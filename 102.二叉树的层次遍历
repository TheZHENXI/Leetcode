/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 
 
 
class Solution 
{
public:
    vector<vector<int>> levelOrder(TreeNode* root) 
    {
        vector<vector<int>> mat;
        if(root == nullptr)
            return mat;
        queue<TreeNode*> q;
        //将根节点入队
        q.push(root);
        //遍历队列
        while(!q.empty())
        {
            //获取当前层的节点数
            int size = q.size();
            //同层的放在同一列
            vector<int> row;
            while(size--)
            {
                //获取当前头元素
                TreeNode* curNode = q.front();
                q.pop();
                row.push_back(curNode->val);
                //将当前元素的孩子节点入队
                if(curNode->left != nullptr) 
                    q.push(curNode->left);
                if(curNode->right != nullptr) 
                    q.push(curNode->right);
            }             
            mat.push_back(row);
        }
        return mat;
    } 
};
