string stringMap[] = {"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
class Solution {
public:
    void dfs(string digits,vector<string>& Solutions,int curIdx,string curStr)
    {
        //边界处理
        if(curIdx == digits.size())
        {
            Solutions.push_back(curStr);
            return;
        }
        //处理当前位置
        string curMap = stringMap[digits[curIdx] - '0'];//例1：取出“abc”
        for(char ch:curMap)
        {
            //处理下边的按键
            dfs(digits,Solutions,curIdx + 1,curStr + ch);//curStr + ch是组合的过程
        }
    }
    vector<string> letterCombinations(string digits) 
    {

        vector<string> Solutions;        
        if(digits.size() == 0)
            return Solutions;
            
        dfs(digits,Solutions,0,"");
        return Solutions;
    }
};
