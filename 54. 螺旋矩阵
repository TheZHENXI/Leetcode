class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) 
    {
        vector<int> ret;        
        if(matrix.empty())
            return ret;

        int row = matrix.size();
        int col = matrix[0].size();
        /*      t
             —— —— —— 
            |        |
          l |        | r
            |        |
             —— —— ——
                 b
        */
        int l = 0,t = 0,r = col,b = row;//定义四条边界
        while(t < b && l < r)
        {
            //往右打印  ---->
            if(t < b && l <r)//防止多打印，因为在while的一趟中，可能已经遍历完，但没有判断
            {                //因此多加个if判断
                for(int j = l;j < r;j++)
                {
                    ret.push_back(matrix[t][j]);
                }
                t++;
            }
            //往下打印      
            if(t < b && l <r)
            {
                for(int i = t;i < b;i++)
                {
                    ret.push_back(matrix[i][r-1]);
                }
                r--; 
            }
            //往左打印 <-----
            if(t < b && l <r)
            {
                for(int j = r-1;j >= l;j--)
                {
                    ret.push_back(matrix[b-1][j]);
                }
                b--; 
            }
            //往上打印  
            if(t < b && l <r)
            {
                for(int i = b-1;i >= t;i--)
                {
                    ret.push_back(matrix[i][l]);
                }
                l++;
            }
        }
        return ret;
    }
};
