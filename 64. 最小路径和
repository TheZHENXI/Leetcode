class Solution {
public:
    
    int minPathSum(vector<vector<int>>& grid) 
    {  
        int m = grid.size();
        int n = grid[0].size();
        //状态顶替：F(i,j) [0,0]到[i,j]的最小和
        vector<vector<int>> minSum(grid);
        //初始化:F(i,0) = F(i-1,0),F(0,j) = F(0,j-1)
        for(int i = 1;i < m;i++)
        {
            minSum[i][0] = minSum[i-1][0] + grid[i][0];
        }
        for(int j = 1;j < n;j++)
        {
            minSum[0][j] = minSum[0][j-1] + grid[0][j];
        }
        //
        for(int i = 1;i < m;i++)
        {
            for(int j = 1;j < n;j++)
            {
                //状态转移方程:F(i,j) = min(F(i-1,j),F(i,j-1))
                minSum[i][j] = min( minSum[i-1][j] , minSum[i][j-1] ) + grid[i][j];
            }
        }
        return minSum[m-1][n-1];
    }
};
