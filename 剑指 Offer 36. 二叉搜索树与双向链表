/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;

    Node() {}

    Node(int _val) {
        val = _val;
        left = NULL;
        right = NULL;
    }

    Node(int _val, Node* _left, Node* _right) {
        val = _val;
        left = _left;
        right = _right;
    }
};
*/
//[4 2 5 1 3]
//中序：左 根 右
//[1 2 3 4 5 ]
class Solution {
public:
    void Convert(Node* cur,Node* &head,Node* &tail)
    {
        if(cur == nullptr)
            return;

        Convert(cur->left,head,tail);

        if(head == nullptr)
        {
            head = cur;
            tail = cur;
        }
        else
        {
            cur->left = tail;
            tail->right = cur;
            tail = cur;
        }

        Convert(cur->right,head,tail);
    }

    Node* treeToDoublyList(Node* root) 
    {
        if(root == nullptr)
            return nullptr;

        Node* head = nullptr;
        Node* tail = nullptr;
        Convert(root,head,tail);
        head->left  = tail;
        tail->right = head;

        return head;
    }
};
