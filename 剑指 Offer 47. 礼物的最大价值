class Solution {
public:
    int maxValue(vector<vector<int>>& grid) {
        //状态定义：F(i,j)表示从(0,0)到(i,j)的最大的价值
        int m = grid.size();
        int n = grid[0].size();
        vector<vector<int>> maxSum(grid);
        //初始化
        //F(i,0) = F(i-1,0) + array[i][0]
        for(int i = 1;i < m;i++)
        {
            maxSum[i][0] = maxSum[i-1][0] + grid[i][0];
        }
        //F(i,0) = F(0,j-1) + array[0][j]
        for(int j = 1;j < n;j++)
        {
            maxSum[0][j] = maxSum[0][j-1] + grid[0][j];
        }
        for(int i = 1;i < m;i++)
        {
            for(int j = 1;j < n;j++)
            {
                //状态转移方程：F(i,0) = max(F(i-1,j),F(i,j-1)) + array[i][0]
                maxSum[i][j] = max(maxSum[i-1][j],maxSum[i][j-1]) +grid[i][j];
            }
        }
        return maxSum[m-1][n-1];
    }
};
